import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.linear_model import Lasso
from sklearn import metrics
car_data_set = pd.read_csv("car data.csv")
print(car_data_set)
car_data_set.head()
car_data_set.tail()
car_data_set.shape
car_data_set.info()
car_data_set.isnull().sum()
car_data_set.replace({"Fuel_Type":{"Petrol":0, "Diesel":1, "CNG":2}}, inplace=True)
car_data_set.replace({"Seller_Type": {"Dealer":0, "Individual":1}}, inplace=True)
car_data_set.replace({"Transmission":{"Manual":0, "Automatic":1}}, inplace=True)
print(car_data_set)
x=car_data_set.drop(["Car_Name","Selling_Price"], axis= 1)
y=car_data_set["Selling_Price"]
print(x)
print(y)
x_train,x_test,y_train,y_test=train_test_split(x,y, test_size=0.1, random_state=2)
lin_reg_model = LinearRegression()
lin_reg_model.fit(x_train, y_train)
train_data_prediction = lin_reg_model.predict(x_train)
error_score = metrics.r2_score(y_train, train_data_prediction)
print(error_score)
plt.scatter(y_train, train_data_prediction)
plt.xlabel("Actaul Price")
plt.ylabel("predicted price")
plt.title("actual prices vs predicted prices")
plt.show()
test_data_prediction =lin_reg_model.predict(x_test)
error_score = metrics.r2_score(y_test, test_train_prediction)
print(error_score)
plt.scatter(y_test, test_train_prediction)
plt.xlabel("ACtaul Price")
plt.ylabel("predicted price")
plt.show()
lin_reg_model = Lasso()
lin_reg_model.fit(x_train,y_train)
train_data_prediction = lin_reg_model.predict(x_train)
error_score=metrics.r2_score(y_train, train_data_prediction)
print(error_score)
plt.scatter(y_train,train_data_prediction)
plt.xlabel("Actual Price")
plt.ylabel("Predicted Price")
plt.show()
test_data_prediction = lin_reg_model.predict(x_test)
error_score = metrics.r2_score(y_test,test_data_predicton)
print(error_score)
plt.scatter(y_test,test_data_prediction)
plt.xlabel("Actual Price")
plt.ylabel("Predicted price")
plot.title("ACtual Price vs Predicted Price")
plt.show()
